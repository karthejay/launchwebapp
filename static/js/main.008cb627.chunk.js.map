{"version":3,"sources":["components/Layout/index.js","components/Loader/index.js","utils/calculateGrade.js","utils/calculateScore.js","utils/getLetter.js","utils/shuffle.js","utils/timeConverter.js","components/Offline/index.js","components/Main/index.js","components/Header/index.js","components/Quiz/index.js","components/Result/Stats.js","components/Result/index.js","components/App/index.js","serviceWorkerRegistration.js","index.js"],"names":["Layout","children","Loader","Container","Message","icon","size","Icon","name","loading","Content","Header","calculateGrade","score","percentage","parseInt","grade","remarks","calculateScore","totalQuestions","correctAnswers","Number","toFixed","getLetter","number","letter","shuffle","array","i","length","j","Math","floor","random","timeConverter","milliseconds","hours","slice","minutes","seconds","Offline","window","addEventListener","location","reload","Segment","placeholder","role","Main","startQuiz","useState","category","numOfQuestions","difficulty","questionsType","countdownTime","processing","error","setError","offline","allFieldsSelected","className","Item","src","onDismiss","message","width","height","Button","content","onClick","dataJson","zones","disabled","Headers","style","background","Quiz","data","endQuiz","questionIndex","setQuestionIndex","selectoption","setselectoption","mindex","setmindex","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","enableimage","setEnableimage","useranswerarr","handleItemClick","decodedOption","console","log","questarr","getmodquest","forEach","module","index","push","class","Object","keys","map","Group","divided","Meta","Question","Description","answer_choices","option","onMouseOver","event","onMouseOut","type","id","value","for","marginRight","Extra","primary","qna","upIndex","floated","labelPosition","question","he","decode","user_answer","Stats","timeTaken","replayQuiz","resetQuiz","statsmindex","setstatsmindex","statsquestarr","handleDivClicked","ind","href","Result","App","setLoading","setData","setCountdownTime","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","setTimeout","shuffledData","element","options","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","Swal","fire","toast","position","title","showConfirmButton","timer","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.008cb627.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n \nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n     \n      <main>{children}</main>\n    </Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Container, Message, Icon } from 'semantic-ui-react';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Message icon size=\"big\">\n        <Icon name=\"circle notched\" loading />\n        <Message.Content>\n          <Message.Header>Just one second</Message.Header>\n          We are fetching that content for you.\n        </Message.Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default Loader;\n","const calculateGrade = score => {\n  const percentage = parseInt(score);\n\n  let grade = null;\n  let remarks = null;\n\n  if (percentage >= 97) {\n    grade = 'A+';\n  } else if (percentage >= 93 && percentage <= 96) {\n    grade = 'A';\n  } else if (percentage >= 90 && percentage <= 92) {\n    grade = 'A-';\n  } else if (percentage >= 87 && percentage <= 89) {\n    grade = 'B+';\n  } else if (percentage >= 83 && percentage <= 86) {\n    grade = 'B';\n  } else if (percentage >= 80 && percentage <= 82) {\n    grade = 'B-';\n  } else if (percentage >= 77 && percentage <= 79) {\n    grade = 'C+';\n  } else if (percentage >= 73 && percentage <= 76) {\n    grade = 'C';\n  } else if (percentage >= 70 && percentage <= 72) {\n    grade = 'C-';\n  } else if (percentage >= 67 && percentage <= 69) {\n    grade = 'D+';\n  } else if (percentage >= 63 && percentage <= 66) {\n    grade = 'D';\n  } else if (percentage >= 60 && percentage <= 62) {\n    grade = 'D-';\n  } else if (percentage < 60) {\n    grade = 'F';\n  }\n\n  if (score >= 60) {\n    remarks = 'Congratulations, YOU PASSED!';\n  } else {\n    remarks = 'Sorry, YOU FAILED!';\n  }\n\n  return {\n    grade,\n    remarks\n  };\n};\n\nexport default calculateGrade;\n","const calculateScore = (totalQuestions, correctAnswers) => {\n  return Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\n};\n\nexport default calculateScore;\n","const getLetter = number => {\n  let letter;\n\n  switch (number) {\n    case 0:\n      letter = 'A.';\n      break;\n    case 1:\n      letter = 'B.';\n      break;\n    case 2:\n      letter = 'C.';\n      break;\n    case 3:\n      letter = 'D.';\n      break;\n    case 4:\n    letter = 'E.';\n    break;\n    case 5:\n      letter = 'F.';\n      break;     \n    default:\n      letter = null;\n      break;\n  }\n\n  return letter;\n};\n\nexport default getLetter;\n","const shuffle = array => {\n  array = [...array];\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nexport default shuffle;\n","const timeConverter = milliseconds => {\n  const hours = `0${Math.floor(milliseconds / 3600000)}`.slice(-2);\n  const minutes = `0${Math.floor((milliseconds / 60000) % 60)}`.slice(-2);\n  const seconds = `0${Math.floor((milliseconds / 1000) % 60) % 60}`.slice(-2);\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport default timeConverter;\n","import React from 'react';\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\n\nconst Offline = () => {\n  window.addEventListener('online', () => window.location.reload());\n\n  return (\n    <Container>\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"unlink\" />\n          <h1>Offline</h1>\n          <p>\n            There is no Internet connection. We'll try to reload automatically\n            once you're back online!{' '}\n            <span role=\"img\" aria-label=\"signal\">\n              📶\n            </span>\n          </p>\n        </Header>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Offline;\n","import React, { Component, useState,useEffect } from 'react';\nimport PropTypes from 'prop-types';\n \nimport {\n   \n  Item,\n  \n  Button,\n  Message,\n} from 'semantic-ui-react';\n\nimport { shuffle } from '../../utils';\n\nimport Offline from '../Offline';\nimport dataJson from '../../quizzes/data.json'; \nimport '../../landingpage.css';\n\nconst Main = ({ startQuiz }) => {\n  const [category, setCategory] = useState('0');\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('0');\n  const [questionsType, setQuestionsType] = useState('0');\n  //const[mindex, setmindex] = useState(\"module\"+1);\n  const [countdownTime, setCountdownTime] = useState({\n    hours: 0,\n    minutes: 120,\n    seconds: 0,\n  });\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [offline, setOffline] = useState(false);\n  const arr = [];\n  const handleTimeChange = (e, { name, value }) => {\n    setCountdownTime({ ...countdownTime, [name]: value });\n  };\n\n  let allFieldsSelected = false;\n  if (\n    category &&\n    numOfQuestions &&\n    difficulty &&\n    questionsType &&\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\n  ) {\n    allFieldsSelected = true;\n  }\n\n   \n  // const mindex = \"module\"+1;\n   const fetchData = () => {\n     \n    /* //Object.keys(dataJson.zones).forEach((module, index) => { \n     // const mno = index+1;\n     \n      dataJson.zones[mindex].forEach((obj, idx) => {\n        const currno = idx+1;\n         const totssc = [];\n         totssc.push(idx)\n             // Object.assign(obj, {moduleNo: mno});\n              Object.assign(obj, {currentscr: currno});\n            //  Object.assign(obj, {totalscr: totscr.length});\n              arr.push(obj);\n                 \n                // console.log(obj+\" WEEE\"+idx); \n             })\n      //  }) */\n\t  \n\t // Object.keys(dataJson.zones).forEach((module, index) => { \n\t\t\t//arr.push(dataJson.zones);\n\t  //})\n\t  //console.log(dataJson.zones);\n        /* arr.forEach(element => {\n          element.options = shuffle([ \n            ...element.answer_choices,\n          ]);\n        }); */\n        startQuiz(\n          dataJson.zones, \n          countdownTime.hours + countdownTime.minutes + countdownTime.seconds\n        );\n   // const API = `https://opentdb.com/api.php?amount=${numOfQuestions}&category=${category}&difficulty=${difficulty}&type=${questionsType}`;\n    //console.log(arr)\n\n  };\n\n  if (offline) return <Offline />;\n\n  return (\n    <div className=\"main_landingpage\"> \n          \n            \n              <Item.Header>\n                <div className=\"mulesoft_logo\"><img src=\"../../assets/images/mulesoft-ar21.svg\"  /></div>\n              </Item.Header>\n              {error && (\n                <Message error onDismiss={() => setError(null)}>\n                  <Message.Header>Error!</Message.Header>\n                  {error.message}\n                </Message>\n              )}\n             <div className=\"landingpage\">\n               <div className=\"left_img\"><img src=\"../../assets/images/img.png\" width=\"200px\" height=\"200px\"  /></div>\n               <div className=\"right_txt\">\n                 <div className=\"head1\">Assessment</div>\n                 <div className=\"head2\">App Dev Fundamentals<br/></div>\n                 <div className=\"desc\"><br/>Start this assessment to understand your learning Journey<br/><br/> This assessment is composed of 12 sections. It should take approximately X minutes.</div>\n                 <br/>\n                 <Button                  \n                  className=\"start_btn\"  \n                  content={'Start'}\n                  onClick={fetchData}\n                  disabled={!allFieldsSelected || processing}\n                />\n                 </div>\n                 </div>\n              \n               \n               \n             \n    </div>\n  );\n};\n\nMain.propTypes = {\n  startQuiz: PropTypes.func.isRequired, \n  passmoduleno: PropTypes.number.isRequired\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\nimport '../../index.css';\nconst Headers = () => {\n   \n  return (\n    <div style={{background:'#00044C'}}> \n      <div className=\"header_mulesoft\">\n        <div className=\"heading_left\" ><div className=\"mulesoft_logo2\"><img src=\"../../assets/images/mulesoft-ar21.svg\"  /> </div> <div className=\"headingright\">|</div> <div className=\"headingright\"> App Dev Fundamentals</div></div>\n        <div className=\"heading_right\" >Assessment</div>\n      </div>\n  \n    </div>\n  );\n};\n\nexport default Headers;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { \nItem,\nDivider,\nButton, \nMenu,\nHeader\n} from 'semantic-ui-react';\nimport he from 'he';\nimport Headers from '../Header';\nimport { getLetter } from '../../utils';\nimport '../../index.css';\nimport getmodule from '../../quizzes/data.json'; \n\nconst Quiz = ({ data, endQuiz }) => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [selectoption, setselectoption] = useState(null);\n  const [mindex, setmindex] = useState(1);//WORKED TODAY\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);  \n  const[enableimage, setEnableimage] = useState(false);\n  const useranswerarr = [];\n  useranswerarr[mindex] = [];\n  const handleItemClick = (decodedOption) => {\n    //setselectoption(i); \n    console.log(decodedOption+\" i\")\n   \n     if(decodedOption == \"A. module1_q5-a\" && enableimage == false){\n\n      setEnableimage(true);\n     }\n     else {\n      setEnableimage(false);\n     }\n  };\n\n   \n\t//WORKED TODAY\n    const questarr = [];\n\tlet intmodindex=\"module\"+mindex;\n\t//console.log(\"intmodindex\"+intmodindex);\n\tconst getmodquest=data[intmodindex];\n\tgetmodquest.forEach((module, index) => { // Modulewise questions\n\t\t\tquestarr.push(module);\n\t});\n console.log(\"questarrlength\"+getmodquest);\n\t\n\t\n    const handleBack = () => {\n\t\t//let point = 0;\n\t   // if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\n\t   //   point = 1;\n\t\t//}\n\n\t\tconst qna = questionsAndAnswers;\n\t\tqna.push({\n\t\t  question: he.decode(questarr[questionIndex].Question),\n\t\t  user_answer: userSlectedAns,\n\t\t // correct_answer: he.decode(data[questionIndex].correct_answer),\n\t\t  //point\n\t\t});\n\n\t if (questionIndex === 0) {\n\t\t \n\t\t} \n\n\t\t//setCorrectAnswers(correctAnswers - point);\n\t\tsetQuestionIndex(questionIndex - 1);\n\t\tsetUserSlectedAns(null);\n\t\tsetQuestionsAndAnswers(qna);\n\t\t\n\t\tif (questionIndex === 0) {\n\t\tconst upIndex=mindex-1;\n\t\t//console.log(upIndex);\n\t\tsetmindex(upIndex);\n\t\tsetQuestionIndex(questarr.length);\n    return endQuiz({\n\t\t\ttotalQuestions: data.length,\n\t\t\t//correctAnswers: correctAnswers - point,\n\t\t\t//timeTaken,\n\t\t\t//questionsAndAnswers: qna\n\t\t  });\n\t\t}\n\t\t\n  };\n\n  const handleNext = () => {\n\n    const qna = questionsAndAnswers;\n    //let point = 0;\n   \n  // if (typeof useranswerarr[mindex].isArray === 'undefined')  {useranswerarr[mindex] = [];}\n  //useranswerarr[mindex] = [];\n    useranswerarr[mindex][questionIndex] = selectoption; \n    //useranswerarr[1][2] = 10; \n    console.log(useranswerarr+\" WE\")\n     if (selectoption === questarr[questionIndex].answer_choices) {\n      \n     // point = 1;\n    }\n  \n  setselectoption(null);\n   // const qna = questionsAndAnswers;\n    qna.push({\n      //question: he.decode(questarr[questionIndex].Question),\n    //  user_answer: userSlectedAns,\n     // correct_answer: he.decode(data[questionIndex].correct_answer),\n     // point\n    });\n   \n\n    if (questionIndex === data.length - 1) {\n      return endQuiz({\n        totalQuestions: data.length,\n       // correctAnswers: correctAnswers + point, \n        questionsAndAnswers: qna\n      });\n    }\n\n    //setCorrectAnswers(correctAnswers + point);\n    setQuestionIndex(questionIndex + 1);\n    setUserSlectedAns(null);\n   // setQuestionsAndAnswers(qna);\n\t\n\t\n\t//console.log(questarr.length+\" handle click\");\n\tif (questionIndex === questarr.length - 1) {\n\t\tconst upIndex=mindex+1;\n\t\t//console.log(upIndex);\n\t\tsetmindex(upIndex);\n    useranswerarr[upIndex] = [];\n\t\tsetQuestionIndex(0);\n\t}\n    \n  };\n\n   \n  const handleModuleClick = (i) =>{\n     const upIndex=mindex+1;\n\t\t//console.log(upIndex);\n\t\tsetmindex(i+1);    \n    setQuestionIndex(0);\n \n  }\n\n  return (\n    \n    <Item.Header>\n       <Headers></Headers>\n      \n         <div className=\"quiz_section\">\n        <div class=\"grid-container\">\n  <div class=\"grid-item firstcolumn\">\n    <div className=\"scroll_inst\">Click on Module names to navigate to other modules</div>\n    <div className=\"tocArea\">\n     \n      \n    {Object.keys(data).map((module, index) => {      \n      return(\n      \n   <div key={index+1} className=\"tocModCover active\" onClick={() => handleModuleClick(index)}>\n      <div className=\"verticalLine\"></div>\n        <div className=\"tocModNo\">{index+1}</div>\n        <div  className=\"toctxtCont\">\n        <p className=\"tocTitle\">Module {index+1} name appears here</p>\n        <p className=\"tocDis\">Lorem ipsum dolor sit amet, consectetur adipisc</p>\n        </div>\n      </div>\n   \n    )    \n      })} \n    </div>\n  </div>\n  <div class=\"grid-item secondcolumn\"><Item.Group divided>\n            <Item>\n              <Item.Content>\n                \n                    <Header.Content>\n                    <div class=\"moduletitArea\"> {`Module ${mindex}`} <p className=\"totalQues\">{`${questionIndex+1}/`}{`${questarr.length}`}</p></div>\n                    </Header.Content> \n                <Item.Meta>                \n                    <p className=\"questionPart\"> <b>{`${questarr[questionIndex].Question}`}</b></p>\n                                   \n                  <Item.Description>\n                    <p className=\"insTxt\"><em>Select the right answer</em></p>\n                  </Item.Description>\n                  {questarr[questionIndex].answer_choices.map((option, i) => {                    \n                     const decodedOption =option;\n                     const letter = getLetter(i);\n                     return (    \n                  <div className={`radiogrp ${selectoption == i ? 'applyoptioncss' : '' }`}  onMouseOver={(event) => handleItemClick(decodedOption)} onMouseOut={(event) => handleItemClick(decodedOption)}>\n\t<input type=\"radio\" class=\"radioColor\" name=\"radioOption\" id= {`Module ${mindex}`} value={decodedOption}/>\n\t<label for=\"\"> <b style={{ marginRight: '8px' }}>{letter}</b> {decodedOption}</label>\n</div>\n                     )\n})}\n                  {enableimage && <div class=\"imageDiv\"><img src=\"../../assets/images/module1_q5-a.png\"  /></div>}\n                </Item.Meta>\n                \n                <Item.Extra>\n                  <Button\n                    primary\n                    content=\"Next\"\n                    onClick={handleNext}\n                    floated=\"right\"\n                    size=\"big\"\n                    icon=\"right chevron\"\n                    labelPosition=\"right\" \n                  />\n                  <Button\n                    primary\n                    content=\"Back\"\n                    onClick={handleBack}\n                    floated=\"left\"\n                    size=\"big\"\n                    icon=\"left chevron\"\n                    labelPosition=\"left\" \n                  />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group></div>\n  <div class=\"grid-item thirdcolumn\"><div className=\"question_img\"><img src=\"../../assets/images/m1q1.svg\"  /></div></div>   \n</div>\n          \n        </div>\n       \n     \n    </Item.Header>\n  );\n};\n\nQuiz.propTypes = {\n  data: PropTypes.object.isRequired,\n  changemodule: PropTypes.func.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { useState } from 'react'; \nimport PropTypes from 'prop-types';\nimport { Container, Segment, Header, Button } from 'semantic-ui-react';\n\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\nimport statsjson from '../../quizzes/data.json';\nimport '../../index.css';\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  data,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\n  const [show, toggleShow] = useState(true);\n  const [selectmodulelearning, setselectmodulelearning] = useState(null);\n  const [statsmindex, setstatsmindex] = useState(1);//WORKED TODAY\n  const [statsquestionIndex, setstatsQuestionIndex] = useState(0);\n  console.log(data+\" datadata\")\n  const statsquestarr = [];\n  let statsmodindex=\"module\"+statsmindex;\n\n\tconst getstatsmodquest=data[statsmodindex];\n\tgetstatsmodquest.forEach((module, index) => { // Modulewise questions\n    statsquestarr.push(module);\n\t}); \n  console.log(\"statsquestarr\"+statsquestarr);\n  //const handleDivClicked = ev => {\n \n//\tconsole.log(`Div ${ev.currentTarget.dataset.div_id} clicked`)\n\t \n\t//};\n  const handleDivClicked = (ind) => {\n    const upIndex=statsmindex+1;\n    console.log(upIndex);\n    setstatsmindex(upIndex);    \n  // setQuestionIndex(0);\n  };\n\t\n\n  return (\n    <div>\n     <div className=\"userPopup\">\n          <div className=\"popUpArea\">\n              <button className=\"moduleClose\">X</button>\n              <label for=\"emails\" className=\"emailInst\">Please enter your email address to receive a copy of this report</label>\n              <input className=\"emailBox\" type=\"email\" id=\"emails\" name=\"emails\" placeholder=\"Email address\"/>\n              <button className=\"sendBtn\">Send</button>\n          </div>\n        </div>\n    <div  className=\"grid-container resultHeader\">\n        <div className=\"grid-item w-50\">\n            <p className=\"resTit\">ASSESSMENT REPORT</p>\n            <p className=\"resDis\">Lorem ipsum dolor sit amet, consectetur adipisc</p>\n        </div>\n        <div className=\"grid-item w-50 txt-right\">\n          <button className=\"DL_Btn\">Download</button>\n          <button className=\"emailRep_Btn\">Email Report</button>\n        </div>\n    </div>\n    <div  className=\" resultpageSec2\">\n       <div className=\"grid-item \">\n            <p className=\"resTit\">HEATMAP</p>\n            <p className=\"resDis\">Lorem ipsum dolor sit amet, consectetur adipisc</p>\n        </div>\n        <Container>\n        <table className=\"chartArea resultTable\">\n          <tr>\n              <th></th>\n              <th className=\"\">Module 1</th>\n              <th className=\"\">Module 2</th>\n              <th>Module 3</th>\n              <th>Module 4</th>\n              <th>Module 5</th>\n              <th>Module 6</th>\n              <th>Module 7</th>\n              <th>Module 8</th>\n              <th>Module 9</th>\n              <th>Module 10</th>\n              <th>Module 11</th>\n              <th>Module 12</th>\n              <th>Module 13</th>            \n          </tr>\n          <tr>\n              <td className=\"\">Question 1</td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n          </tr>\n          <tr>\n              <td className=\"\">Question 2</td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n          </tr>\n          <tr>\n              <td className=\"\">Question 3</td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n          </tr>\n          <tr>\n              <td className=\"\">Question 4</td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n          </tr>\n          <tr>\n              <td className=\"\">Question 5</td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"yellow\"></td>\n          </tr>\n          <tr>\n              <td className=\"\">Question 6</td>\n              <td className=\"mtCol\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"yellow\"></td>\n              <td className=\"mtCol\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"mtCol\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"mtCol\"></td>\n              <td className=\"mtCol\"></td>\n              <td className=\"mtCol\"></td>\n              <td className=\"redBg\"></td>\n              <td className=\"grennBg\"></td>\n              <td className=\"mtCol\"></td>\n          </tr>\n        </table>\n        </Container>\n        <div className=\"grid-item \">\n        <p className=\"resTit\">RECOMENDED LEARNING</p>\n        <p className=\"resDis\">Lorem ipsum dolor sit amet, consectetur adipisc</p>\n        </div>\n    </div>\n    <div className=\"\">\n\n\t\t<div className=\"grid-container\">\n\t\t  <div className=\"grid-item firstResultcol  \">\n\t\t\t<div className=\"\">\t\n\t\t\t\t<p class=\"recomSec\">Click on Module names to see recommended learning</p>\n        {Object.keys(data).map((module, index) => {   \n      return(\n\t\t<div key={index+1}  className=\"moduleBox\" onClick={handleDivClicked}>\n\t\t<p className=\"moduleTit\">Module {index+1}</p>\n\t\t<p className=\"moduleDis\">Subtext</p>\n\t</div>  \n   \n    )\n    \n      })}\n\t\t\t \n\t\t\t</div>\n\t\t  \n\t\t  </div>\n\t\t  <div className=\"grid-item secondResultcol \">\n\n\n\n      {Object.keys(data).map((module, index) => { \n            console.log(index+\" statsquestarr\")\n           \n              //console.log(obj)\n      return(\n      \n       \n       \n        <div className=\"suggestionArea\" key={index+1}>\n        <p className=\"feedbackTitle\">MODULE 1</p>\n        <p className=\"feedbackdis\">Lorem ipsum dolor sit amet, consectetur adipisc</p>\n\t\t\t\n      \t<div className=\"screenInd\" key={index}>\n          <div className=\"questionFeedTit\">\n            <div>\n\t\t\t\t      <div class=\"questionBadge grennBg\"><img src=\"../../assets/images/mortarboard.png\"  /></div>\n              <p className=\"screenTitle \">Question {index}</p>\n\t\t\t\t\t    <p className=\"screenDes\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n          </div>\n          <div>\n            <p className=\"catText greenTxt\">Suggested learning</p>\n          </div>\n          </div>\n\t\t\t\t\t<div className=\"questionFeedbody\">\n            <ul>\n              <li><a className=\"\" href=\"\">Lorem Ipsum is simply dummy text</a></li>\n              <li><a className=\"\" href=\"\">Lorem Ipsum is simply dummy text</a></li>\n              <li><a className=\"\" href=\"\">Lorem Ipsum is simply dummy text</a></li>\n              <li><a className=\"\" href=\"\">Lorem Ipsum is simply dummy text</a></li>\n            </ul>\n          </div>\n\t\t\t\t</div>\n \n\t\t\t</div>\n      \n  \n    )    \n \n      })} \n\t\t\t\n\n\n\n\n\t\t</div>\n\t\t</div>\n    </div>\n   \n    </div>\n  );\n};\n\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Stats;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'; \n\nimport Stats from './Stats'; \n\nconst Result = ({\n  data,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const [activeTab, setActiveTab] = useState('Stats');\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name);\n  };\n\n  return (\n    <div>\n       \n      \n        <Stats\n          data={data}\n          replayQuiz={replayQuiz}\n          resetQuiz={resetQuiz}\n        />\n       \n       \n    </div>\n  );\n};\n\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Result;\n","import React, { useState } from 'react';\n\nimport Layout from '../Layout';\nimport Loader from '../Loader';\nimport Main from '../Main';\nimport Quiz from '../Quiz';\nimport Result from '../Result';\n\nimport { shuffle } from '../../utils';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n\n  const startQuiz = (data, countdownTime) => {\n    setLoading(true);\n    //setCountdownTime(countdownTime);\n\n    setTimeout(() => {\n      setData(data);\n      setIsQuizStarted(true);\n      setLoading(false);\n    }, 10);\n  };\n\n  const endQuiz = resultData => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setIsQuizStarted(false);\n      setIsQuizCompleted(true);\n      setResultData(resultData);\n      setLoading(false);\n    }, 2000);\n  };\n\n  const replayQuiz = () => {\n    setLoading(true);\n\n    const shuffledData = shuffle(data);\n    shuffledData.forEach(element => {\n      element.options = shuffle(element.options);\n    });\n\n    setData(shuffledData);\n\n    setTimeout(() => {\n      setIsQuizStarted(true);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const resetQuiz = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setData(null);\n      setCountdownTime(null);\n      setIsQuizStarted(false);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <Layout>\n      {loading && <Loader />}\n      {!loading && !isQuizStarted && !isQuizCompleted && (\n        <Main startQuiz={startQuiz} />\n      )}\n      {!loading && isQuizStarted && (\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} />\n      )}\n      {!loading && isQuizCompleted && (\n        <Result {...resultData} data={data} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\n      )}\n    </Layout>\n  );\n};\n\nexport default App;\n","import Swal from 'sweetalert2';\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker.'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              Swal.fire({\n                toast: 'true',\n                position: 'bottom',\n                icon: 'success',\n                title: 'App is ready to work offline.',\n                showConfirmButton: false,\n                timer: 6000\n              });\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}